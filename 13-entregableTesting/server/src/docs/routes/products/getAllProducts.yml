paths:
  /api/products:
    get:
      summary: Retrieve all products with pagination
      tags: 
        - Products
      description: Returns a paginated list of products.
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            default: 10
          description: The maximum number of products per page.
        - name: page
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
          description: The page number for pagination.
        - name: sort
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
          description: The sorting order (asc or desc) of the products by price.
        - name: query
          in: query
          required: false
          schema:
            type: string
          description: A search query to filter the products by category or title.
      responses:
        '200':
          description: Successful response with a paginated list of products.
          content:
            application/json:
              schema:
                type: object
                properties:
                  docs:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                    description: The array of products on the current page.
                  totalDocs:
                    type: integer
                    description: The total number of products across all pages.
                  page:
                    type: integer
                    description: The current page number.
                  totalPages:
                    type: integer
                    description: The total number of pages.
                  prevLink:
                    type: string
                    description: The link to the previous page (null if there is no previous page).
                  nextLink:
                    type: string
                    description: The link to the next page (null if there is no next page).
        "400":
          description: Value received is incorrect
        "401":
          description: Unauthorized token
        "500":
          description: Server error unexpected.

